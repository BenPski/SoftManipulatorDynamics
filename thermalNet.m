function [y1] = thermalNet(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 13-Jul-2018 11:58:51.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;25;25;25];
x1_step1.gain = [0.667222685571309;0.667467627820051;0.666866726684672;0.013934369121438;0.0138908181691902;0.0144519112652648];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.1702720817720211333;-1.4949354778923857889;0.034827099350849238801;-1.1206040926507800926;-1.2521958055772683949;0.39583767310732564937;0.67734850278161962134;-0.72069227398213231428;-0.66719904663186913041;-0.40767759650678470074;0.58228193560042340593;0.7185279752680407972;0.48261151071762053988;-1.0856278798435370359;1.1199220049305154134;-0.77421668606566407256;-1.1173173931325108832;1.0606639999489986259;0.73760690934850092759;2.7068915810824916157];
IW1_1 = [-0.24166783022722521101 0.83896358735543408169 0.041578720490552424638 0.47239538755178611673 -0.16274836925445912428 -0.58341970034092216491;-0.15807291349383609247 0.03646385642254149767 0.7235192478975103203 0.73577750943213959811 -0.72778374450376948079 -0.058389225171287958971;0.12987638450931998646 -0.036670302749779067064 -0.0184268198427633631 -0.66282140795631894203 -0.2092230941464720273 0.75895910522138776422;0.94555708566290963546 0.93090113518037709284 0.43713398419464444267 0.015132098325377769943 -0.37373217592383339847 0.51830661639451724998;0.42180405897610973032 -0.33146845785770806536 -0.95038968202483542491 1.224385615310988884 0.94757720837911052492 -1.2465726810939845581;-0.028667033303791375487 -0.09261983142296059679 -0.07763647157640533869 -0.15849356770468620015 0.7137176918179507501 0.33569326797350856895;-1.0137027414204553555 0.75940744517424974003 0.40330389732012811299 0.52916693200940512209 2.2552282346550311942 -1.6588679242558592719;0.20884383228040434566 -0.023002825906516911197 0.68138605453529643707 -0.062456999440079326302 0.098093287617568580838 0.022175771042635246399;1.5436875645911596333 0.49384989552047026118 0.15899271305840670387 -1.290102284633610541 -0.2571694697528174034 0.32491148094288230253;1.0639263748082590233 -0.55701840350565456905 0.27881562653856778455 -0.006271026761639321781 -0.84916968183769336864 1.1285408178933198364;-0.52449204454789888352 0.071582749887387206456 -0.12394651607107916302 0.10534419571498185308 -0.11133647302629803844 -0.11473863925187530177;0.63642193785547218621 -0.64234295589888479316 0.26164705772601470901 0.057991419946208933034 -1.6011038494542624289 -0.047275726522959866938;0.95995533273274458175 0.43052202601568101414 0.51326146306625175519 0.81149471360270164499 -0.64421453325585142924 -0.91236304018905234337;0.56895635388200205274 -0.65086514568753461862 -0.19343512807677715193 -1.487170781441605083 -0.18793837457835871341 1.3690815285318729266;1.297772166389372428 -0.837629322126750675 -0.39604847987942554122 0.21348939420927839916 1.1705805198782088805 -0.45703061330491817627;-0.7421548890842566415 0.5935804985456972771 0.079702971315599752122 -0.75099613033028722597 -0.6562943851440614651 1.190302599817682383;0.60636402629767849337 0.18238935175887363571 0.34694843653873369549 -1.9305236007804114085 0.38878045909659009194 0.96435948079164235391;0.2425565064763709755 -0.015815783586670441319 0.10586415734447682246 0.64629075722853324137 -1.7551995773999429229 1.0923115233131142077;1.0119598695225486829 -0.13265953686405151934 0.26802051769856832797 -1.0141726460147080235 0.11425678369487640706 -0.22684562806015809433;0.66542490534981779682 -1.8693163785222581819 -0.45222192290319085384 -1.1516673335534466371 -0.24603098243291490754 -1.0249588091264412171];

% Layer 2
b2 = [0.6080587952785905248;0.10109755938274753162;0.3949551241109260924];
LW2_1 = [0.17400076031701927626 0.93163857594644738924 -0.2748300650211184526 -0.038523626204022144714 0.035109371469431452373 0.79429230257151828276 -0.026077621724416542859 -0.63435157168065425815 -0.012490982377564394112 0.069118786719759073289 -1.2542740229363260607 -0.050339206846702594378 -0.059697217285842783807 -0.21285472611228220541 -0.036979879144236615929 -0.063708153007342685492 0.07051362110870715294 0.39882576610352982183 -0.032762620726143575067 -0.056800107466231132547;0.62251766419537113428 0.39944587261847108728 -0.082837897731482673658 0.0029938928197132562078 -0.025123033075577470841 1.0437347288644982513 0.026007291542099596204 -0.29231627529663195553 0.020205066740841208517 0.04623906634239774438 -0.16165333176400331627 -0.15457858273042979214 -0.057097047687708811503 -0.16969002888869763601 -0.063068075307978532784 -0.170525827895588733 0.18264315430419536535 0.32609588997776306485 0.15979665514332128118 -0.080120235270249279269;0.175857532604584893 0.97137680989737018589 0.22794873915014263188 -0.051057604038289600146 0.028434147991856891652 0.99428106458610143736 -0.017823756220367682063 0.22463975498013241672 -0.014169668362340823858 0.086316590782066118792 0.022222265535319269542 -0.068566745263443279468 -0.012827677484546842757 -0.18784153943234024875 -0.059394934112259260839 -0.10140967845473641828 0.067529693968289630779 0.40399117124236522125 0.0097409239495000743414 -0.068043831982102065403];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.013934369121438;0.0138908181691902;0.0144519112652648];
y1_step1.xoffset = [25;25;25];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
